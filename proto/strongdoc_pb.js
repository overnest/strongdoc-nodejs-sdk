/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var document_pb = require('./document_pb.js');
goog.object.extend(proto, document_pb);
var documentNoStore_pb = require('./documentNoStore_pb.js');
goog.object.extend(proto, documentNoStore_pb);
var search_pb = require('./search_pb.js');
goog.object.extend(proto, search_pb);
var accounts_pb = require('./accounts_pb.js');
goog.object.extend(proto, accounts_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.proto.BillingPeriod', null, global);
goog.exportSymbol('proto.proto.Documents', null, global);
goog.exportSymbol('proto.proto.GetBillingDetailsRequest', null, global);
goog.exportSymbol('proto.proto.GetBillingDetailsResponse', null, global);
goog.exportSymbol('proto.proto.GetBillingPeriodRequest', null, global);
goog.exportSymbol('proto.proto.GetBillingPeriodResponse', null, global);
goog.exportSymbol('proto.proto.GetConfigurationReq', null, global);
goog.exportSymbol('proto.proto.GetConfigurationResp', null, global);
goog.exportSymbol('proto.proto.Index', null, global);
goog.exportSymbol('proto.proto.SetBillingPeriodRequest', null, global);
goog.exportSymbol('proto.proto.SetBillingPeriodResponse', null, global);
goog.exportSymbol('proto.proto.TimeInterval', null, global);
goog.exportSymbol('proto.proto.Traffic', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.GetBillingDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.GetBillingDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.GetBillingDetailsRequest.displayName = 'proto.proto.GetBillingDetailsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.GetBillingDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.GetBillingDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.GetBillingDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetBillingDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.GetBillingDetailsRequest}
 */
proto.proto.GetBillingDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.GetBillingDetailsRequest;
  return proto.proto.GetBillingDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.GetBillingDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.GetBillingDetailsRequest}
 */
proto.proto.GetBillingDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.GetBillingDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.GetBillingDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.GetBillingDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetBillingDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.GetBillingDetailsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.GetBillingDetailsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.GetBillingDetailsResponse.displayName = 'proto.proto.GetBillingDetailsResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.GetBillingDetailsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.GetBillingDetailsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.GetBillingDetailsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetBillingDetailsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentperiod: (f = msg.getCurrentperiod()) && proto.proto.BillingPeriod.toObject(includeInstance, f),
    totalcost: jspb.Message.getFieldWithDefault(msg, 2, 0),
    documents: (f = msg.getDocuments()) && proto.proto.Documents.toObject(includeInstance, f),
    index: (f = msg.getIndex()) && proto.proto.Index.toObject(includeInstance, f),
    traffic: (f = msg.getTraffic()) && proto.proto.Traffic.toObject(includeInstance, f),
    nextperiod: (f = msg.getNextperiod()) && proto.proto.BillingPeriod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.GetBillingDetailsResponse}
 */
proto.proto.GetBillingDetailsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.GetBillingDetailsResponse;
  return proto.proto.GetBillingDetailsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.GetBillingDetailsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.GetBillingDetailsResponse}
 */
proto.proto.GetBillingDetailsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.BillingPeriod;
      reader.readMessage(value,proto.proto.BillingPeriod.deserializeBinaryFromReader);
      msg.setCurrentperiod(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalcost(value);
      break;
    case 3:
      var value = new proto.proto.Documents;
      reader.readMessage(value,proto.proto.Documents.deserializeBinaryFromReader);
      msg.setDocuments(value);
      break;
    case 4:
      var value = new proto.proto.Index;
      reader.readMessage(value,proto.proto.Index.deserializeBinaryFromReader);
      msg.setIndex(value);
      break;
    case 5:
      var value = new proto.proto.Traffic;
      reader.readMessage(value,proto.proto.Traffic.deserializeBinaryFromReader);
      msg.setTraffic(value);
      break;
    case 6:
      var value = new proto.proto.BillingPeriod;
      reader.readMessage(value,proto.proto.BillingPeriod.deserializeBinaryFromReader);
      msg.setNextperiod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.GetBillingDetailsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.GetBillingDetailsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.GetBillingDetailsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetBillingDetailsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentperiod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.BillingPeriod.serializeBinaryToWriter
    );
  }
  f = message.getTotalcost();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDocuments();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.proto.Documents.serializeBinaryToWriter
    );
  }
  f = message.getIndex();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.proto.Index.serializeBinaryToWriter
    );
  }
  f = message.getTraffic();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.proto.Traffic.serializeBinaryToWriter
    );
  }
  f = message.getNextperiod();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.proto.BillingPeriod.serializeBinaryToWriter
    );
  }
};


/**
 * optional BillingPeriod currentPeriod = 1;
 * @return {?proto.proto.BillingPeriod}
 */
proto.proto.GetBillingDetailsResponse.prototype.getCurrentperiod = function() {
  return /** @type{?proto.proto.BillingPeriod} */ (
    jspb.Message.getWrapperField(this, proto.proto.BillingPeriod, 1));
};


/** @param {?proto.proto.BillingPeriod|undefined} value */
proto.proto.GetBillingDetailsResponse.prototype.setCurrentperiod = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.proto.GetBillingDetailsResponse.prototype.clearCurrentperiod = function() {
  this.setCurrentperiod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.GetBillingDetailsResponse.prototype.hasCurrentperiod = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 totalCost = 2;
 * @return {number}
 */
proto.proto.GetBillingDetailsResponse.prototype.getTotalcost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.proto.GetBillingDetailsResponse.prototype.setTotalcost = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Documents documents = 3;
 * @return {?proto.proto.Documents}
 */
proto.proto.GetBillingDetailsResponse.prototype.getDocuments = function() {
  return /** @type{?proto.proto.Documents} */ (
    jspb.Message.getWrapperField(this, proto.proto.Documents, 3));
};


/** @param {?proto.proto.Documents|undefined} value */
proto.proto.GetBillingDetailsResponse.prototype.setDocuments = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.proto.GetBillingDetailsResponse.prototype.clearDocuments = function() {
  this.setDocuments(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.GetBillingDetailsResponse.prototype.hasDocuments = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Index index = 4;
 * @return {?proto.proto.Index}
 */
proto.proto.GetBillingDetailsResponse.prototype.getIndex = function() {
  return /** @type{?proto.proto.Index} */ (
    jspb.Message.getWrapperField(this, proto.proto.Index, 4));
};


/** @param {?proto.proto.Index|undefined} value */
proto.proto.GetBillingDetailsResponse.prototype.setIndex = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.proto.GetBillingDetailsResponse.prototype.clearIndex = function() {
  this.setIndex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.GetBillingDetailsResponse.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Traffic traffic = 5;
 * @return {?proto.proto.Traffic}
 */
proto.proto.GetBillingDetailsResponse.prototype.getTraffic = function() {
  return /** @type{?proto.proto.Traffic} */ (
    jspb.Message.getWrapperField(this, proto.proto.Traffic, 5));
};


/** @param {?proto.proto.Traffic|undefined} value */
proto.proto.GetBillingDetailsResponse.prototype.setTraffic = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.proto.GetBillingDetailsResponse.prototype.clearTraffic = function() {
  this.setTraffic(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.GetBillingDetailsResponse.prototype.hasTraffic = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional BillingPeriod nextPeriod = 6;
 * @return {?proto.proto.BillingPeriod}
 */
proto.proto.GetBillingDetailsResponse.prototype.getNextperiod = function() {
  return /** @type{?proto.proto.BillingPeriod} */ (
    jspb.Message.getWrapperField(this, proto.proto.BillingPeriod, 6));
};


/** @param {?proto.proto.BillingPeriod|undefined} value */
proto.proto.GetBillingDetailsResponse.prototype.setNextperiod = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.proto.GetBillingDetailsResponse.prototype.clearNextperiod = function() {
  this.setNextperiod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.GetBillingDetailsResponse.prototype.hasNextperiod = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.BillingPeriod = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.BillingPeriod, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.BillingPeriod.displayName = 'proto.proto.BillingPeriod';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.BillingPeriod.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.BillingPeriod.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.BillingPeriod} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.BillingPeriod.toObject = function(includeInstance, msg) {
  var f, obj = {
    frequency: jspb.Message.getFieldWithDefault(msg, 1, 0),
    periodstart: (f = msg.getPeriodstart()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    periodend: (f = msg.getPeriodend()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.BillingPeriod}
 */
proto.proto.BillingPeriod.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.BillingPeriod;
  return proto.proto.BillingPeriod.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.BillingPeriod} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.BillingPeriod}
 */
proto.proto.BillingPeriod.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.TimeInterval} */ (reader.readEnum());
      msg.setFrequency(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPeriodstart(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPeriodend(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.BillingPeriod.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.BillingPeriod.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.BillingPeriod} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.BillingPeriod.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrequency();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getPeriodstart();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPeriodend();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional TimeInterval frequency = 1;
 * @return {!proto.proto.TimeInterval}
 */
proto.proto.BillingPeriod.prototype.getFrequency = function() {
  return /** @type {!proto.proto.TimeInterval} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.proto.TimeInterval} value */
proto.proto.BillingPeriod.prototype.setFrequency = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp periodStart = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.proto.BillingPeriod.prototype.getPeriodstart = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.proto.BillingPeriod.prototype.setPeriodstart = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.proto.BillingPeriod.prototype.clearPeriodstart = function() {
  this.setPeriodstart(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.BillingPeriod.prototype.hasPeriodstart = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp periodEnd = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.proto.BillingPeriod.prototype.getPeriodend = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.proto.BillingPeriod.prototype.setPeriodend = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.proto.BillingPeriod.prototype.clearPeriodend = function() {
  this.setPeriodend(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.BillingPeriod.prototype.hasPeriodend = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Documents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Documents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.Documents.displayName = 'proto.proto.Documents';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Documents.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Documents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Documents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Documents.toObject = function(includeInstance, msg) {
  var f, obj = {
    cost: jspb.Message.getFieldWithDefault(msg, 1, 0),
    size: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Documents}
 */
proto.proto.Documents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Documents;
  return proto.proto.Documents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Documents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Documents}
 */
proto.proto.Documents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Documents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Documents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Documents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Documents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCost();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
};


/**
 * optional int32 cost = 1;
 * @return {number}
 */
proto.proto.Documents.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.proto.Documents.prototype.setCost = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional double size = 2;
 * @return {number}
 */
proto.proto.Documents.prototype.getSize = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.proto.Documents.prototype.setSize = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Index = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Index, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.Index.displayName = 'proto.proto.Index';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Index.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Index.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Index} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Index.toObject = function(includeInstance, msg) {
  var f, obj = {
    cost: jspb.Message.getFieldWithDefault(msg, 1, 0),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Index}
 */
proto.proto.Index.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Index;
  return proto.proto.Index.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Index} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Index}
 */
proto.proto.Index.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Index.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Index.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Index} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Index.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCost();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int32 cost = 1;
 * @return {number}
 */
proto.proto.Index.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.proto.Index.prototype.setCost = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 size = 2;
 * @return {number}
 */
proto.proto.Index.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.proto.Index.prototype.setSize = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Traffic = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Traffic, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.Traffic.displayName = 'proto.proto.Traffic';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Traffic.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Traffic.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Traffic} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Traffic.toObject = function(includeInstance, msg) {
  var f, obj = {
    cost: jspb.Message.getFieldWithDefault(msg, 1, 0),
    incoming: jspb.Message.getFieldWithDefault(msg, 2, 0),
    outgoing: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Traffic}
 */
proto.proto.Traffic.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Traffic;
  return proto.proto.Traffic.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Traffic} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Traffic}
 */
proto.proto.Traffic.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCost(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIncoming(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOutgoing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Traffic.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Traffic.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Traffic} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Traffic.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCost();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getIncoming();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getOutgoing();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int32 cost = 1;
 * @return {number}
 */
proto.proto.Traffic.prototype.getCost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.proto.Traffic.prototype.setCost = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 incoming = 2;
 * @return {number}
 */
proto.proto.Traffic.prototype.getIncoming = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.proto.Traffic.prototype.setIncoming = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 outgoing = 3;
 * @return {number}
 */
proto.proto.Traffic.prototype.getOutgoing = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.proto.Traffic.prototype.setOutgoing = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.GetBillingPeriodRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.GetBillingPeriodRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.GetBillingPeriodRequest.displayName = 'proto.proto.GetBillingPeriodRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.GetBillingPeriodRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.GetBillingPeriodRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.GetBillingPeriodRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetBillingPeriodRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.GetBillingPeriodRequest}
 */
proto.proto.GetBillingPeriodRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.GetBillingPeriodRequest;
  return proto.proto.GetBillingPeriodRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.GetBillingPeriodRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.GetBillingPeriodRequest}
 */
proto.proto.GetBillingPeriodRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.GetBillingPeriodRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.GetBillingPeriodRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.GetBillingPeriodRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetBillingPeriodRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.GetBillingPeriodResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.GetBillingPeriodResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.GetBillingPeriodResponse.displayName = 'proto.proto.GetBillingPeriodResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.GetBillingPeriodResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.GetBillingPeriodResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.GetBillingPeriodResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetBillingPeriodResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentperiod: (f = msg.getCurrentperiod()) && proto.proto.BillingPeriod.toObject(includeInstance, f),
    nextperiod: (f = msg.getNextperiod()) && proto.proto.BillingPeriod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.GetBillingPeriodResponse}
 */
proto.proto.GetBillingPeriodResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.GetBillingPeriodResponse;
  return proto.proto.GetBillingPeriodResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.GetBillingPeriodResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.GetBillingPeriodResponse}
 */
proto.proto.GetBillingPeriodResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.BillingPeriod;
      reader.readMessage(value,proto.proto.BillingPeriod.deserializeBinaryFromReader);
      msg.setCurrentperiod(value);
      break;
    case 2:
      var value = new proto.proto.BillingPeriod;
      reader.readMessage(value,proto.proto.BillingPeriod.deserializeBinaryFromReader);
      msg.setNextperiod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.GetBillingPeriodResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.GetBillingPeriodResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.GetBillingPeriodResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetBillingPeriodResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentperiod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.BillingPeriod.serializeBinaryToWriter
    );
  }
  f = message.getNextperiod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.proto.BillingPeriod.serializeBinaryToWriter
    );
  }
};


/**
 * optional BillingPeriod currentPeriod = 1;
 * @return {?proto.proto.BillingPeriod}
 */
proto.proto.GetBillingPeriodResponse.prototype.getCurrentperiod = function() {
  return /** @type{?proto.proto.BillingPeriod} */ (
    jspb.Message.getWrapperField(this, proto.proto.BillingPeriod, 1));
};


/** @param {?proto.proto.BillingPeriod|undefined} value */
proto.proto.GetBillingPeriodResponse.prototype.setCurrentperiod = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.proto.GetBillingPeriodResponse.prototype.clearCurrentperiod = function() {
  this.setCurrentperiod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.GetBillingPeriodResponse.prototype.hasCurrentperiod = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BillingPeriod nextPeriod = 2;
 * @return {?proto.proto.BillingPeriod}
 */
proto.proto.GetBillingPeriodResponse.prototype.getNextperiod = function() {
  return /** @type{?proto.proto.BillingPeriod} */ (
    jspb.Message.getWrapperField(this, proto.proto.BillingPeriod, 2));
};


/** @param {?proto.proto.BillingPeriod|undefined} value */
proto.proto.GetBillingPeriodResponse.prototype.setNextperiod = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.proto.GetBillingPeriodResponse.prototype.clearNextperiod = function() {
  this.setNextperiod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.GetBillingPeriodResponse.prototype.hasNextperiod = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.SetBillingPeriodRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.SetBillingPeriodRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.SetBillingPeriodRequest.displayName = 'proto.proto.SetBillingPeriodRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.SetBillingPeriodRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.SetBillingPeriodRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.SetBillingPeriodRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SetBillingPeriodRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    frequency: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.SetBillingPeriodRequest}
 */
proto.proto.SetBillingPeriodRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.SetBillingPeriodRequest;
  return proto.proto.SetBillingPeriodRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.SetBillingPeriodRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.SetBillingPeriodRequest}
 */
proto.proto.SetBillingPeriodRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.proto.TimeInterval} */ (reader.readEnum());
      msg.setFrequency(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.SetBillingPeriodRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.SetBillingPeriodRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.SetBillingPeriodRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SetBillingPeriodRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrequency();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional TimeInterval frequency = 1;
 * @return {!proto.proto.TimeInterval}
 */
proto.proto.SetBillingPeriodRequest.prototype.getFrequency = function() {
  return /** @type {!proto.proto.TimeInterval} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.proto.TimeInterval} value */
proto.proto.SetBillingPeriodRequest.prototype.setFrequency = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.SetBillingPeriodResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.SetBillingPeriodResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.SetBillingPeriodResponse.displayName = 'proto.proto.SetBillingPeriodResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.SetBillingPeriodResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.SetBillingPeriodResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.SetBillingPeriodResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SetBillingPeriodResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    currentperiod: (f = msg.getCurrentperiod()) && proto.proto.BillingPeriod.toObject(includeInstance, f),
    nextperiod: (f = msg.getNextperiod()) && proto.proto.BillingPeriod.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.SetBillingPeriodResponse}
 */
proto.proto.SetBillingPeriodResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.SetBillingPeriodResponse;
  return proto.proto.SetBillingPeriodResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.SetBillingPeriodResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.SetBillingPeriodResponse}
 */
proto.proto.SetBillingPeriodResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.BillingPeriod;
      reader.readMessage(value,proto.proto.BillingPeriod.deserializeBinaryFromReader);
      msg.setCurrentperiod(value);
      break;
    case 2:
      var value = new proto.proto.BillingPeriod;
      reader.readMessage(value,proto.proto.BillingPeriod.deserializeBinaryFromReader);
      msg.setNextperiod(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.SetBillingPeriodResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.SetBillingPeriodResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.SetBillingPeriodResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.SetBillingPeriodResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrentperiod();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.BillingPeriod.serializeBinaryToWriter
    );
  }
  f = message.getNextperiod();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.proto.BillingPeriod.serializeBinaryToWriter
    );
  }
};


/**
 * optional BillingPeriod currentPeriod = 1;
 * @return {?proto.proto.BillingPeriod}
 */
proto.proto.SetBillingPeriodResponse.prototype.getCurrentperiod = function() {
  return /** @type{?proto.proto.BillingPeriod} */ (
    jspb.Message.getWrapperField(this, proto.proto.BillingPeriod, 1));
};


/** @param {?proto.proto.BillingPeriod|undefined} value */
proto.proto.SetBillingPeriodResponse.prototype.setCurrentperiod = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.proto.SetBillingPeriodResponse.prototype.clearCurrentperiod = function() {
  this.setCurrentperiod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.SetBillingPeriodResponse.prototype.hasCurrentperiod = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional BillingPeriod nextPeriod = 2;
 * @return {?proto.proto.BillingPeriod}
 */
proto.proto.SetBillingPeriodResponse.prototype.getNextperiod = function() {
  return /** @type{?proto.proto.BillingPeriod} */ (
    jspb.Message.getWrapperField(this, proto.proto.BillingPeriod, 2));
};


/** @param {?proto.proto.BillingPeriod|undefined} value */
proto.proto.SetBillingPeriodResponse.prototype.setNextperiod = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.proto.SetBillingPeriodResponse.prototype.clearNextperiod = function() {
  this.setNextperiod(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.proto.SetBillingPeriodResponse.prototype.hasNextperiod = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.GetConfigurationReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.GetConfigurationReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.GetConfigurationReq.displayName = 'proto.proto.GetConfigurationReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.GetConfigurationReq.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.GetConfigurationReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.GetConfigurationReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetConfigurationReq.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.GetConfigurationReq}
 */
proto.proto.GetConfigurationReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.GetConfigurationReq;
  return proto.proto.GetConfigurationReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.GetConfigurationReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.GetConfigurationReq}
 */
proto.proto.GetConfigurationReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.GetConfigurationReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.GetConfigurationReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.GetConfigurationReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetConfigurationReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.GetConfigurationResp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.GetConfigurationResp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.GetConfigurationResp.displayName = 'proto.proto.GetConfigurationResp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.GetConfigurationResp.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.GetConfigurationResp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.GetConfigurationResp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetConfigurationResp.toObject = function(includeInstance, msg) {
  var f, obj = {
    configuration: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.GetConfigurationResp}
 */
proto.proto.GetConfigurationResp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.GetConfigurationResp;
  return proto.proto.GetConfigurationResp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.GetConfigurationResp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.GetConfigurationResp}
 */
proto.proto.GetConfigurationResp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfiguration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.GetConfigurationResp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.GetConfigurationResp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.GetConfigurationResp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.GetConfigurationResp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfiguration();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string configuration = 1;
 * @return {string}
 */
proto.proto.GetConfigurationResp.prototype.getConfiguration = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.proto.GetConfigurationResp.prototype.setConfiguration = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * @enum {number}
 */
proto.proto.TimeInterval = {
  UNDEFINED: 0,
  MONTH: 1,
  YEAR: 2
};

goog.object.extend(exports, proto.proto);
